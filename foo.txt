[1mdiff --git a/README.md b/README.md[m
[1mindex 437754a..3597a84 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -49,10 +49,7 @@[m [mProtocol for defining log entries with structured data:[m
 [m
 ```swift[m
 public protocol LogKitEntry: Codable, Sendable {[m
[31m-    var level: Logger.Level? { get set }[m
     var tags: [String]? { get set }[m
[31m-    var labels: [String: String]? { get set }[m
[31m-    var metadata: Logger.Metadata? { get set }[m
     var timestamp: Date? { get set }[m
     var message: String? { get set }[m
     var source: String? { get set }[m
[36m@@ -79,10 +76,7 @@[m [mLogKit provides a comprehensive error handling system through `LogKitError`:[m
 ```swift[m
 // Define a custom log entry[m
 struct MyLogEntry: LogKitEntry {[m
[31m-    var level: Logger.Level?[m
     var tags: [String]?[m
[31m-    var labels: [String: String]?[m
[31m-    var metadata: Logger.Metadata?[m
     var timestamp: Date?[m
     var message: String?[m
     var source: String?[m
[1mdiff --git a/Sources/LogKit/LogKitEntry.swift b/Sources/LogKit/LogKitEntry.swift[m
[1mindex daf555e..a278ae5 100644[m
[1m--- a/Sources/LogKit/LogKitEntry.swift[m
[1m+++ b/Sources/LogKit/LogKitEntry.swift[m
[36m@@ -4,14 +4,8 @@[m [mimport Logging[m
 [m
 //[m
 public protocol LogKitEntry: Codable, Sendable {[m
[31m-    var level: Logger.Level? { get set }[m
[31m-    [m
     var tags: [String]? { get set }[m
     [m
[31m-    var labels: [String: String]? { get set }[m
[31m-    [m
[31m-    var metadata: Logger.Metadata? { get set }[m
[31m-    [m
     var timestamp: Date? { get set }[m
     [m
     var message: String? { get set }[m
[1mdiff --git a/Sources/LogKit/LogKitService.swift b/Sources/LogKit/LogKitService.swift[m
[1mindex de8f09e..c36a3da 100644[m
[1m--- a/Sources/LogKit/LogKitService.swift[m
[1m+++ b/Sources/LogKit/LogKitService.swift[m
[36m@@ -34,6 +34,12 @@[m [mpublic protocol LogKitServiceable: Sendable {[m
     var id: LogKitIdentifier { get }[m
     [m
     var handler: LogHandler { get }[m
[32m+[m[41m  [m
[32m+[m[32m    var level: Logger.Level? { get set }[m
[32m+[m[41m  [m
[32m+[m[32m    var labels: [String: String]? { get set }[m
[32m+[m[41m  [m
[32m+[m[32m    var metadata: Logger.Metadata? { get set }[m
     [m
     func log(_ action: Action, entry: Entry) async throws[m
     [m
